<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.what2e.eatwhat.dao.OrderMapper1" >
  <resultMap id="BaseResultMap" type="com.what2e.eatwhat.entity.Order" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="order_type_id" property="orderTypeId" jdbcType="INTEGER" />
    <result column="order_remarks" property="orderRemarks" jdbcType="VARCHAR" />
    <result column="order_price" property="orderPrice" jdbcType="VARCHAR" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, u_id, order_type_id, order_remarks, order_price, address_id, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.what2e.eatwhat.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from `order`
    where u_id = #{u_id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.what2e.eatwhat.entity.OrderExample" >
    delete from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--<insert id="insert" parameterType="com.what2e.eatwhat.entity.Order" >
    insert into order (order_id, u_id, order_type_id, 
      order_remarks, order_price, address_id, 
      create_time, update_time)
    values (#{orderId,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{orderTypeId,jdbcType=INTEGER}, 
      #{orderRemarks,jdbcType=VARCHAR}, #{orderPrice,jdbcType=VARCHAR}, #{addressId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>-->
  <insert id="insert" parameterType="com.what2e.eatwhat.entity.Order" useGeneratedKeys="true" keyProperty="orderId">
      insert into `order` (u_id, order_remarks, order_price, address_id,
      create_time)
    values ( #{uId,jdbcType=INTEGER}, #{orderRemarks,jdbcType=VARCHAR}, #{orderPrice,jdbcType=VARCHAR},
    #{addressId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.what2e.eatwhat.entity.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="orderTypeId != null" >
        order_type_id,
      </if>
      <if test="orderRemarks != null" >
        order_remarks,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null" >
        #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="orderRemarks != null" >
        #{orderRemarks,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.what2e.eatwhat.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `order`
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.orderTypeId != null" >
        order_type_id = #{record.orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.orderRemarks != null" >
        order_remarks = #{record.orderRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `order`
    set order_id = #{record.orderId,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      order_type_id = #{record.orderTypeId,jdbcType=INTEGER},
      order_remarks = #{record.orderRemarks,jdbcType=VARCHAR},
      order_price = #{record.orderPrice,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.what2e.eatwhat.entity.Order" >
    update `order`
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null" >
        order_type_id = #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="orderRemarks != null" >
        order_remarks = #{orderRemarks,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.what2e.eatwhat.entity.Order" >
    update `order`
    set u_id = #{uId,jdbcType=INTEGER},
      order_type_id = #{orderTypeId,jdbcType=INTEGER},
      order_remarks = #{orderRemarks,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>